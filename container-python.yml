---
- name: Create Linux container with python
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    container_namespace: "{{ lookup('env','CONTAINER_NAMESPACE') | default('docker.io', true) }}"
    container_distro: "{{ lookup('env','CONTAINER_DISTRO') | default('alpine', true) }}"
    container_distro_version: "{{ lookup('env','CONTAINER_DISTRO_VERSION') | default('3.18', true) }}"
    base_image: "{{ container_namespace }}/{{ container_distro }}:{{ container_distro_version }}"
    container_name: "py_{{ container_distro }}_{{ container_distro_version }}"
    image_namespace: "{{ lookup('env','IMAGE_NAMESPACE') | default('coglinev3', true) }}"
    image_name: "{{ lookup('env','IMAGE_NAME') | default('python', true) }}"
    image_tag: "{{ container_distro }}-{{ container_distro_version }}"
  pre_tasks:
    - name: "Make base image available locally: {{ base_image }}"
      community.docker.docker_image:
        name: '{{ base_image }}'
        source: pull
        force_source: true
    - name: Create the Docker container.
      community.general.docker_container:
        container_default_behavior: no_defaults
        image: '{{ base_image }}'
        name: '{{ container_name }}'
        command: tail -f /dev/null
    - name: Add the newly created container to the inventory.
      ansible.builtin.add_host:
        hostname: '{{ container_name }}'
        ansible_connection: docker
  tasks:
    - name: "Install Python if needed"
      ansible.builtin.import_role:
        name: "coglinev3.ansible_python"
      delegate_to: '{{ container_name }}'
  post_tasks:
    - name: Commit the container.
      ansible.builtin.command: >
        docker commit
        --author "Cogline.v3"
        {{ container_name }} {{ image_namespace }}/{{ image_name }}:{{ image_tag }}
      register: docker_commit
      changed_when: docker_commit.rc == 0
      failed_when: docker_commit.rc != 0
    - name: Remove the container.
      community.general.docker_container:
        container_default_behavior: no_defaults
        name: '{{ container_name }}'
        state: absent
