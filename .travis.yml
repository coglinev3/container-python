---
dist: bionic
addons:
  apt:
    packages:
    - docker-ce
    - libssl-dev
    - libffi-dev
    - python3
    - python3-pip
    - python3-setuptools
    - python3-software-properties
    - python3-wheel

language: minimal

services:
  - docker

env:
  global:
    - IMAGE_NAME: python
  matrix:
    - IMAGE_TAG: alpine-3.11
    - IMAGE_TAG: alpine-3.10
    - IMAGE_TAG: alpine-3.9
    - IMAGE_TAG: debian-8
      IMAGE_ALTERNATE_TAG: debian-jessie
    - IMAGE_TAG: ubuntu-19.10
      IMAGE_ALTERNATE_TAG: ubuntu-bionic
    - IMAGE_TAG: ubuntu-18.04
      IMAGE_ALTERNATE_TAG: ubuntu-bionic
    - IMAGE_TAG: ubuntu-16.04
      IMAGE_ALTERNATE_TAG: ubuntu-xenial

install:
  # Install Ansible and Python Docker Module
  - pip3 install ansible docker

before_script:
  # Configure Ansible
  - cp .travis/ansible.cfg ~/.ansible.cfg
  - mkdir -p ~/.ansible && cp .travis/hosts ~/.ansible
  # Show Ansible version
  - ansible --version
  # Create roles directory
  - mkdir -p ~/.ansible/roles
  # Install required Ansible Role(s)
  - ansible-galaxy install -r requirements.yml -p ~/.ansible/roles

script:
  # Build image with Ansible
  - ansible-playbook python-${IMAGE_TAG}.yml

after_success:
  # show container os-release
  - >
    docker run -it --rm
      ${DOCKER_USERNAME}/${IMAGE_NAME}:${IMAGE_TAG}
      env TERM=xterm cat /etc/os-release

  # show container python version
  - >
    docker run -it --rm
      ${DOCKER_USERNAME}/${IMAGE_NAME}:${IMAGE_TAG}
      env TERM=xterm python3 --version

deploy:
  provider: script
  script: bash scripts/docker_push
  cleanup: false
  on:
    branch: master
